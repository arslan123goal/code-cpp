//Time complexity in linear search--> O(n)
#include<iostream>
using namespace std;
int LinearSearch(int arr[],int n,int key)
{
    for (int i = 0; i < n; i++)
    {
        if (arr[i]==key)
        {
            return i;
        }
    }
    return -1;
}
int main()
{
    int n;
    cout<<"Enter the size of array"<<endl;
    cin>>n;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i];
    }
    int key;
    cout<<"Enter the key to search"<<endl;
    cin>>key;
    cout<<LinearSearch(arr,n,key);
return 0;
}

// Time complexity in Binary Search --> O(log2n)
#include <iostream>
using namespace std;
int BinarySearch(int arr[], int n, int key)
{
    int s = 0;
    int e = n;
    while (s <= e)
    {
        int mid = (s + e) / 2;
        if (arr[mid] == key)
        {
            return mid;
        }
        else if (arr[mid] > key)
        {
            e = mid - 1;
        }
        else
        {
            s = mid + 1;
        }
    }
    return -1;
}
    int main()
    {
        int n;
        cout << "Enter the size of array" << endl;
        cin >> n;
        int arr[n];
        cout<<"Enter integers in array"<<endl;
        for (int i = 0; i < n; i++)
        {
            cin >> arr[i];
        }
        int key;
        cout << "Enter the key you want to search" << endl;
        cin >> key;
        cout<<BinarySearch(arr,n,key);
        return 0;
    }